#!/bin/bash
# test_hdd_perf
# executes various tests against a given disk

# Copyright (C) 2014-2015 Alexander Swen <alex@swen.nu>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Alexander Swen
# Private contact: alex@swen.nu

# CHANGELOG:
# 2010-03-25  A.Swen  created.

# SETTINGS
date=$(date +%Y%m%d)
me=$(basename $0)
mydir=$(dirname $0)

# FUNCTIONS
die () {
  rc=$1
  shift
  echo "====================================================" >&2
  echo "====                FATAL  ERROR                ====" >&2
  echo "====================================================" >&2
  echo "" >&2
  echo $@ >&2
  exit $rc
}

usage () {
  echo "====================================================" >&2
  echo "====                   USAGE                    ====" >&2
  echo "====================================================" >&2
  echo "" >&2
  echo "Usage: ${me} [-s \"testfilesize in Mb\"] [-d dirname] [-D diskdevicename] [-u uid] [-g gid]" >&2
  echo "All parameters except -s are obligatory" >&2
  echo "" >&2
  echo "example: ${me} -s \"16000\" -d /data -D /dev/sda -u 1000 -g 500" >&2
  echo "" >&2
  exit 1
}

testperf () {
echo "we set uid and gid for bonnie++ to ${user} and ${group}"
echo "current ownership: $(ls -al ${dir}/.|head -2|tail -1|awk '{print $3" "$4}')"
chown ${user}:${group} ${dir}

#echo "bonnie -s ${size}"
#cd "${dir}"
#time bonnie -s ${size}
#echo " "

echo -n hdparm
time hdparm -Tt ${disk}
echo " "

echo "bonnie++ with writebuffering enabled"
time bonnie++ -d "${dir}" -u ${user}:${group} -n20
echo " "

echo "bonnie++ with writebuffering disabled, (fsync() after every write)"
time bonnie++ -d "${dir}" -u ${user}:${group} -n20 -b
echo " "
}

# SCRIPT
[ ${UID} -gt 0 ] && die 0 only root may do that
[ $# -gt 0 ]||usage

while getopts "s:d:D:u:g:" opt;do
  case ${opt} in
    u) export user=`echo ${OPTARG}` ;;
    g) export group=`echo ${OPTARG}` ;;
    s) export size=`echo ${OPTARG}` ;;
    d) export dir=`echo ${OPTARG}` ;;
    D) export disk=`echo ${OPTARG}` ;;
    *) usage;;
  esac
done

#for tool in /usr/bin/bonnie "/usr/sbin/bonnie++" /sbin/hdparm;do [ -x "${tool}" ] || die 1 "Tool ${tool} not found"
[ -z "${user}" -o -z "${group}" -o -z "${dir}" -o -z "${disk}" ] && usage
[ -d "${dir}" ] ||die 2 "Dir ${dir} not found"

if [ -z "${size}" ];then
  ram=$(free -m|awk '/Mem/ {print $2}')
  size=$((2*ram))
  echo "RAM is ${ram}Mb and we use a file size of 2x${ram}=${size}Mb"

fi
time testperf

# END
