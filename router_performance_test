#!/bin/bash
# router_performance_test
# This script uses various tools to test the performance of a connection

# Alexander Swen
# Private contact: alex@swen.nu, 06-21811135

# CHANGELOG:
# 2014-02-17 Gionatan Danti created original for test http://www.ilsistemista.net/index.php/hardware-analysis/17-mikrotik-routerboard-750-gl-review.html
# 2014-02-17 A.Swen	        modified to add some more tests

# SETTINGS
date=$(date +%Y%m%d)
me=$(basename $0)
mydir=$(dirname $0)


# FUNCTIONS
die () {
  rc=$1
  shift
  echo "==========================">&2
  echo "====    FATAL  ERROR  ====" >&2
  echo "==========================">&2
  echo "" >&2
  echo $@ >&2
  exit $rc
}

usage () {
  echo "==========================" >&2
  echo "====       USAGE      ====" >&2
  echo "==========================" >&2
  echo "" >&2
  echo "Usage: ${me} <userfile>" >&2
  echo "" >&2
  echo "example: ${me} /tmp/userlist" >&2
  echo "" >&2
  exit 1
}

get_options () {
  [ $# -gt 0 ]||usage
  while getopts "s:d:D:u:g:" opt;do
    case ${opt} in
      u) export user=`echo ${OPTARG}` ;;
      *) usage;;
    esac
  done
}

duration () {
  before=$1
  after="$(date +%s)"
  elapsed="$(expr $after - $before)"
  hours=$(($elapsed / 3600))
  elapsed=$(($elapsed - $hours * 3600))
  minutes=$(($elapsed / 60))
  seconds=$(($elapsed - $minutes * 60))
  time_running="${hours}:${minutes}:${seconds}"
}

log_msg () {
  duration ${before_total}
  message="$1"
  echo "${time_running} $1"|tee -a ${short_log}
}

# SCRIPT
before_total="$(date +%s)"
[ ${UID} -gt 0 ] && die 0 only root may do that
log_msg "$(date) started ${me}"
# get_options $@

#!/bin/bash

RND=$RANDOM
#TARGET=172.31.255.27
TARGET=192.168.89.251
REMOTE_ISO=isofile.iso
AB_REQUESTS=100000
AB_CONCURRENCY=4
PING_REQUESTS_SMALL=100000
PING_REQUESTS_BIG=100000
PING_REQUESTS_FRAG=100000
SLEEPTIME=5

function drop_cache {
 echo 3 > /proc/sys/vm/drop_caches
 sync
}

mkdir -p results/netperf_$RND
netperf -H $TARGET,4 -t TCP_STREAM > results/netperf_$RND/netperf_tcpstream_result.txt
drop_cache
sleep $SLEEPTIME
netperf -H $TARGET,4 -t TCP_SENDFILE > results/netperf_$RND/netperf_tcpsendfile_result.txt
drop_cache
sleep $SLEEPTIME
netperf -H $TARGET,4 -t UDP_STREAM > results/netperf_$RND/netperf_udpstream_result.txt
drop_cache
sleep $SLEEPTIME

exit

mkdir -p results/ab_$RND
ab -c $AB_CONCURRENCY -n $AB_REQUESTS http://$TARGET/ > results/ab_$RND/ab_result.txt
drop_cache
sleep $SLEEPTIME

mkdir -p results/wget_$RND
wget http://$TARGET/$REMOTE_ISO -O /tmp/$REMOTE_ISO 2> results/wget_$RND/wget_http_result.txt
drop_cache
sleep $SLEEPTIME
wget ftp://$TARGET/$REMOTE_ISO -O /tmp/$REMOTE_ISO 2> results/wget_$RND/wget_ftp_result.txt
drop_cache
sleep $SLEEPTIME

mkdir -p results/ping_$RND
ping -c $PING_REQUESTS_SMALL -s 64 -f $TARGET > results/ping_$RND/ping_small.txt
drop_cache
sleep $SLEEPTIME
ping -c $PING_REQUESTS_BIG -s 1400 -f $TARGET > results/ping_$RND/ping_big.txt
drop_cache
sleep $SLEEPTIME
ping -c $PING_REQUESTS_FRAG -s 2800 -f $TARGET > results/ping_$RND/ping_frag.txt
drop_cache
sleep $SLEEPTIME

mkdir -p results/netperf_$RND
netperf -H $TARGET,4 -t TCP_STREAM > results/netperf_$RND/netperf_tcpstream_result.txt
drop_cache
sleep $SLEEPTIME
netperf -H $TARGET,4 -t TCP_SENDFILE > results/netperf_$RND/netperf_tcpsendfile_result.txt
drop_cache
sleep $SLEEPTIME
netperf -H $TARGET,4 -t UDP_STREAM > results/netperf_$RND/netperf_udpstream_result.txt
drop_cache
sleep $SLEEPTIME

duration ${before_total}
log_msg "Total time taken: ${hours}:${minutes}:${seconds}"
log_msg "$(date) finished"
# END
