#!/bin/bash
# backup_keepass
# This script is intended to be run by cron and each time check if the keepass
# database is changed and if so: create a copy.

# Copyright (C) 2014-2015 Alexander Swen <alex@swen.nu>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Alexander Swen
# Private contact: alex@swen.nu

# CHANGELOG:
# 20151218	A.Swen	created.

# SETTINGS
date=$(date +%Y%m%d)
me=$(basename $0)
mydir=$(dirname $0)
keepass_dir="${HOME}/KeepassX"
bck_dir="$keepass_dir/.backup"

# FUNCTIONS
die () {
  rc=$1
  shift
  printf '%s\n' "=====================" >&2
  printf '%s\n' "==== FATAL ERROR ====" >&2
  printf '%s\n\n' "=====================" >&2
  printf '%s\n\n' "$@" >&2
  exit $rc
}

usage () {
  printf '%s\n' "===============" >&2
  printf '%s\n' "==== USAGE ====" >&2
  printf '%s\n\n' "===============" >&2
  printf '%s\n' "Usage: ${me} " >&2
  printf '%s\n\n' "example: ${me} " >&2
  exit 1
}

log () { printf '%s:%s: %s\n' "$(date +%F' '%T)" "$me" "$@"; }
now () { date +%FT%T; }

find_last_backup () {
  ls -rt $bck_dir/$(basename $file).[0-9]*|tail -1
}

# SCRIPT
log "Started."
[ -d $keepass_dir ] || die 1 "Keepassdir $keepass_dir not found."
[ -d $bck_dir ]     || install -dm 700 $bck_dir

for file in $keepass_dir/*.kdbx;do
  log "Processing $(basename $file)."
  last_backup=$(find_last_backup)
  log "Last=$(basename $last_backup)"
  if [ ! -f $last ];then
    log "$file was never backed up before. Will backup now."
    cp $file $bck_dir/$(basename $file).$(now)
  elif ! diff -q $file $last_backup 2>&1 >/dev/null;then
    log "$(basename $file) is changed since last backup. Will backup now."
    cp $file $bck_dir/$(basename $file).$(now)
  else
    log "Nothing to do."
  fi
done


log "Finished."
# END
