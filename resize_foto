#!/bin/bash
# resize_foto
# resize a fotoalbum to make it possible to send them over email.

# Copyright (C) 2014-2015 Alexander Swen <alex@swen.nu>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Alexander Swen
# Private contact: alex@swen.nu

# CHANGELOG:
# 2007-12-27    A.Swen  created.
# 2009-09-07  A.Swen  changed to just resize and then exit

# TODO
# Nowadays there's a plugin for nautilus that does this job as well
# That's called nautilus-image-converter. It allows you to select a bunch of
# images and resize them. It laks the zip option that this script has though.

# SETTINGS
date=$(date +%Y%m%d)
me=$(basename $0)
mydir=$(dirname $0)
target_dir="/data/foto/resized"
resize="1024x1024"
quality=60

# FUNCTIONS
die () {
  rc=$1
  shift
  echo "==========================">&2
  echo "====    FATAL  ERROR  ====" >&2
  echo "==========================">&2
  echo "" >&2
  echo $@ >&2
  exit $rc
}

usage () {
  echo "==========================" >&2
  echo "====       USAGE      ====" >&2
  echo "==========================" >&2
  echo "" >&2
  echo  >&2
  echo "Usage: ${me} [-m map] [-f foto] -z" >&2
  echo "" >&2
  echo "So, a whole folder: ${me} -m /data/foto/bla" >&2
  echo "And just one foto: ${me} -f /data/foto/bla/blaat.jpg" >&2
  echo "" >&2
  echo "In case you do a whole folder you have the option to zip the result: put -z somewhere in the command" >&2
  echo "so: ${me} -zm <dir> or ${me} -z -m <dir>" >&2
  echo "" >&2
  echo "The result will be placed in ${target_dir}" >&2
  exit 1
}

# SCRIPT
zip=no
if [ $# -gt 0 ];then
  while getopts "zm:f:" opt;do
    case ${opt} in
      z) export zip=yes;;
      m)
        export dir=`echo ${OPTARG}`
        export dir_name=$(basename "${dir}")
        export mode=dir
      ;;
      f)
        export file=`echo ${OPTARG}`
        export file_name=$(basename "${file}")
        export dir_name=$(basename "$(dirname "${file}")")
        export mode=file
      ;;
    esac
  done
  [ -z "${dir}" -a -z "${file}" ] && usage
else
  usage
fi

[ ! -d "${target_dir}/${dir_name}" ] && mkdir -p "${target_dir}/${dir_name}"

case ${mode} in
  dir)
    cd "${dir}"
    echo "I will convert using resize ${resize} and quality ${quality}"
    find ./ -iname \*.\?\?g|while read file;do
      echo "Now doing file ${file}..."
      convert "${file}" -monitor -resize ${resize} -quality ${quality} "${target_dir}/${dir_name}/${file}"
    done
    find ./ -iname \*.jpeg|while read file;do
      echo "Now doing file ${file}..."
      convert "${file}" -monitor -resize ${resize} -quality ${quality} "${target_dir}/${dir_name}/${file}"
    done
    [ "${zip}" = "yes" ] && zip -rj "${target_dir}/${dir_name}.zip" "${target_dir}/${dir_name}"
  ;;
  file)
    echo "I will convert ${file} using resize ${resize} and quality ${quality}"
    convert "${file}" -monitor -resize ${resize} -quality ${quality} "${target_dir}/${dir_name}/${file_name}"
  ;;
esac


case ${zip} in
  yes) nautilus --no-desktop "${target_dir}"&;;
  no) nautilus --no-desktop "${target_dir}/${dir_name}"&;;
esac

exit 0

# END

